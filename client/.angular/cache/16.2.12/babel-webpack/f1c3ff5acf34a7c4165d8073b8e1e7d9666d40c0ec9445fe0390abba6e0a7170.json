{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserAuthService {\n  constructor() {}\n  setRoles(roles) {\n    localStorage.setItem('roles', JSON.stringify(roles));\n  }\n  getRoles() {\n    const rolesString = localStorage.getItem('roles');\n    return rolesString ? JSON.parse(rolesString) : [];\n  }\n  setToken(jwtToken) {\n    localStorage.setItem('jwtToken', jwtToken);\n  }\n  getToken() {\n    return localStorage.getItem('jwtToken');\n  }\n  clear() {\n    localStorage.clear;\n  }\n  isLogedIn() {\n    return this.getRoles() && this.getToken();\n  }\n  static #_ = this.ɵfac = function UserAuthService_Factory(t) {\n    return new (t || UserAuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserAuthService,\n    factory: UserAuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserAuthService","constructor","setRoles","roles","localStorage","setItem","JSON","stringify","getRoles","rolesString","getItem","parse","setToken","jwtToken","getToken","clear","isLogedIn","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\IntelijIDEA Projfile\\employee_management\\src\\app\\service\\user-auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n\n  constructor() { }\n\n  public setRoles(roles: []) {\n    localStorage.setItem('roles', JSON.stringify(roles));\n  }\n  public getRoles(): any[] {\n    const rolesString = localStorage.getItem('roles');\n    return rolesString ? JSON.parse(rolesString) : [];\n  }\n\n  public setToken(jwtToken: string) {\n    localStorage.setItem('jwtToken', jwtToken);\n  }\n\n  public getToken(): string | null {\n    return localStorage.getItem('jwtToken');\n  }\n  public clear() {\n    localStorage.clear;\n  }\n  public isLogedIn() {\n    return this.getRoles() && this.getToken();\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,eAAe;EAE1BC,YAAA,GAAgB;EAETC,QAAQA,CAACC,KAAS;IACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;EACtD;EACOK,QAAQA,CAAA;IACb,MAAMC,WAAW,GAAGL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IACjD,OAAOD,WAAW,GAAGH,IAAI,CAACK,KAAK,CAACF,WAAW,CAAC,GAAG,EAAE;EACnD;EAEOG,QAAQA,CAACC,QAAgB;IAC9BT,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEQ,QAAQ,CAAC;EAC5C;EAEOC,QAAQA,CAAA;IACb,OAAOV,YAAY,CAACM,OAAO,CAAC,UAAU,CAAC;EACzC;EACOK,KAAKA,CAAA;IACVX,YAAY,CAACW,KAAK;EACpB;EACOC,SAASA,CAAA;IACd,OAAO,IAAI,CAACR,QAAQ,EAAE,IAAI,IAAI,CAACM,QAAQ,EAAE;EAC3C;EAAC,QAAAG,CAAA,G;qBAxBUjB,eAAe;EAAA;EAAA,QAAAkB,EAAA,G;WAAflB,eAAe;IAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
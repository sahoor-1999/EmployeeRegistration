{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/employee.service\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateEmployeeComponent {\n  constructor(activatedRout, service, fb) {\n    this.activatedRout = activatedRout;\n    this.service = service;\n    this.fb = fb;\n    this.id = this.activatedRout.snapshot.params[\"id\"];\n  }\n  ngOnInit() {\n    this.updateEmployeeForm = this.fb.group({\n      empNo: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      empName: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n      mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      email: ['', [Validators.required, Validators.email, Validators.maxLength(100)]]\n    });\n    this.getEmployeeById(this.id);\n  }\n  getEmployeeById(id) {\n    this.service.getEmployeeById(this.id).subscribe(res => {\n      console.log(res);\n    });\n  }\n  static #_ = this.ɵfac = function UpdateEmployeeComponent_Factory(t) {\n    return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateEmployeeComponent,\n    selectors: [[\"app-update-employee\"]],\n    decls: 2,\n    vars: 0,\n    template: function UpdateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"update-employee works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["UpdateEmployeeComponent","constructor","activatedRout","service","fb","id","snapshot","params","ngOnInit","updateEmployeeForm","group","empNo","Validators","required","minLength","maxLength","empName","mobile","email","getEmployeeById","subscribe","res","console","log","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","EmployeeService","i3","FormBuilder","_2","selectors","decls","vars","template","UpdateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\IntelijIDEA Projfile\\employee_management\\src\\app\\components\\update-employee\\update-employee.component.ts","C:\\IntelijIDEA Projfile\\employee_management\\src\\app\\components\\update-employee\\update-employee.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { EmployeeService } from 'src/app/service/employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent {\n\n  \n\n  id:number = this.activatedRout.snapshot.params[\"id\"];\n\nconstructor(private activatedRout:ActivatedRoute,\n  private service:EmployeeService, \n  private fb:FormBuilder){}\n\n  ngOnInit(){\n\n    this.updateEmployeeForm = this.fb.group({\n      empNo:['',[Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      empName:['',[Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n      mobile:['',[Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      email:['',[Validators.required, Validators.email, Validators.maxLength(100)]]\n    })\n\n  this.getEmployeeById(this.id);\n  }\n\n  getEmployeeById(id:number){\n    this.service.getEmployeeById(this.id).subscribe((res) => {\n      console.log(res)\n    })\n  }\n}\n","<p>update-employee works!</p>\n"],"mappings":";;;;AAWA,OAAM,MAAOA,uBAAuB;EAMpCC,YAAoBC,aAA4B,EACtCC,OAAuB,EACvBC,EAAc;IAFJ,KAAAF,aAAa,GAAbA,aAAa;IACvB,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,EAAE,GAAFA,EAAE;IAJV,KAAAC,EAAE,GAAU,IAAI,CAACH,aAAa,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;EAI5B;EAExBC,QAAQA,CAAA;IAEN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MACtCC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACC,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACE,SAAS,CAAC,CAAC,CAAC,EAAEF,UAAU,CAACG,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACnFC,OAAO,EAAC,CAAC,EAAE,EAAC,CAACJ,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACE,SAAS,CAAC,CAAC,CAAC,EAAEF,UAAU,CAACG,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACrFE,MAAM,EAAC,CAAC,EAAE,EAAC,CAACL,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACE,SAAS,CAAC,EAAE,CAAC,EAAEF,UAAU,CAACG,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACrFG,KAAK,EAAC,CAAC,EAAE,EAAC,CAACN,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACM,KAAK,EAAEN,UAAU,CAACG,SAAS,CAAC,GAAG,CAAC,CAAC;KAC7E,CAAC;IAEJ,IAAI,CAACI,eAAe,CAAC,IAAI,CAACd,EAAE,CAAC;EAC7B;EAEAc,eAAeA,CAACd,EAAS;IACvB,IAAI,CAACF,OAAO,CAACgB,eAAe,CAAC,IAAI,CAACd,EAAE,CAAC,CAACe,SAAS,CAAEC,GAAG,IAAI;MACtDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBA1BUxB,uBAAuB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,eAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBjC,uBAAuB;IAAAkC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXpCd,EAAA,CAAAgB,cAAA,QAAG;QAAAhB,EAAA,CAAAiB,MAAA,6BAAsB;QAAAjB,EAAA,CAAAkB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
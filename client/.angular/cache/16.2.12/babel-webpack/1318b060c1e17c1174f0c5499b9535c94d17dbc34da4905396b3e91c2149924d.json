{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst BASIC_URL = [\"http://localhost:8080\"];\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.requestHeader = new HttpHeaders({\n      \"No-Auth\": \"True\"\n    });\n  }\n  login(loginData) {\n    return this.http.post(BASIC_URL + \"/api/auth/signin\", loginData, {\n      headers: this.requestHeader\n    });\n  }\n  postEmployee(employee) {\n    return this.http.post(BASIC_URL + \"/api/employee_management/save\", employee);\n  }\n  getAllEmployee() {\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecord\");\n  }\n  getEmployeeById(id) {\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecordById/\" + id);\n  }\n  updateEmployee(id, employee) {\n    return this.http.put(BASIC_URL + \"/api/employee_management/update/\" + id, employee);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(BASIC_URL + \"/api/employee_management/delete/\" + id);\n  }\n  static #_ = this.ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","BASIC_URL","EmployeeService","constructor","http","requestHeader","login","loginData","post","headers","postEmployee","employee","getAllEmployee","get","getEmployeeById","id","updateEmployee","put","deleteEmployee","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\IntelijIDEA Projfile\\employee_management\\src\\app\\service\\employee.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nconst BASIC_URL = [\"http://localhost:8080\"];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  requestHeader = new HttpHeaders({\n    \"No-Auth\":\"True\"\n  })\n\n  constructor(private http: HttpClient) { }\n\n  login(loginData: any): Observable<any> {\n    return this.http.post(BASIC_URL + \"/api/auth/signin\", loginData, {headers:this.requestHeader});\n  }\n  postEmployee(employee: any): Observable<any> {\n    return this.http.post(BASIC_URL + \"/api/employee_management/save\", employee);\n  }\n\n  getAllEmployee():Observable<any>{\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecord\");\n  }\n\n  getEmployeeById(id: number):Observable<any>{\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecordById/\" + id);\n  }\n\n  updateEmployee(id: number, employee:any):Observable<any>{\n    return this.http.put(BASIC_URL + \"/api/employee_management/update/\" + id, employee);\n  }\n\n  deleteEmployee(id: number):Observable<any>{\n    return this.http.delete(BASIC_URL + \"/api/employee_management/delete/\" + id);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,SAAS,GAAG,CAAC,uBAAuB,CAAC;AAK3C,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,aAAa,GAAG,IAAIL,WAAW,CAAC;MAC9B,SAAS,EAAC;KACX,CAAC;EAEsC;EAExCM,KAAKA,CAACC,SAAc;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACP,SAAS,GAAG,kBAAkB,EAAEM,SAAS,EAAE;MAACE,OAAO,EAAC,IAAI,CAACJ;IAAa,CAAC,CAAC;EAChG;EACAK,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAACP,SAAS,GAAG,+BAA+B,EAAEU,QAAQ,CAAC;EAC9E;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAACZ,SAAS,GAAG,oCAAoC,CAAC;EACxE;EAEAa,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAACZ,SAAS,GAAG,yCAAyC,GAAGc,EAAE,CAAC;EAClF;EAEAC,cAAcA,CAACD,EAAU,EAAEJ,QAAY;IACrC,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAChB,SAAS,GAAG,kCAAkC,GAAGc,EAAE,EAAEJ,QAAQ,CAAC;EACrF;EAEAO,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACX,IAAI,CAACe,MAAM,CAAClB,SAAS,GAAG,kCAAkC,GAAGc,EAAE,CAAC;EAC9E;EAAC,QAAAK,CAAA,G;qBA5BUlB,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvB,eAAe;IAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
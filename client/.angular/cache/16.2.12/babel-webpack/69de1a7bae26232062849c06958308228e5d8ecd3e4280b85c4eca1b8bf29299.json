{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst BASIC_URL = [\"http://localhost:8080\"];\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n  }\n  postEmployee(employee) {\n    return this.http.post(BASIC_URL + \"/api/employee_management/save\", employee);\n  }\n  getAllEmployee() {\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecord\");\n  }\n  getEmployeeById(id) {\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecordById/\" + id);\n  }\n  updateEmployee(id, employee) {\n    return this.http.put(BASIC_URL + \"/api/employee_management/update/\" + id, employee);\n  }\n  deleteEmployeeById(id) {\n    return this.http.get(BASIC_URL + \"/api/employee_management/delete/\" + id);\n  }\n  static #_ = this.ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BASIC_URL","EmployeeService","constructor","http","postEmployee","employee","post","getAllEmployee","get","getEmployeeById","id","updateEmployee","put","deleteEmployeeById","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\IntelijIDEA Projfile\\employee_management\\src\\app\\service\\employee.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nconst BASIC_URL = [\"http://localhost:8080\"];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n  postEmployee(employee: any): Observable<any> {\n    return this.http.post(BASIC_URL + \"/api/employee_management/save\", employee);\n  }\n\n  getAllEmployee():Observable<any>{\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecord\");\n  }\n\n  getEmployeeById(id: number):Observable<any>{\n    return this.http.get(BASIC_URL + \"/api/employee_management/getRecordById/\" + id);\n  }\n\n  updateEmployee(id: number, employee:any):Observable<any>{\n    return this.http.put(BASIC_URL + \"/api/employee_management/update/\" + id, employee);\n  }\n\n  deleteEmployeeById(id: number):Observable<any>{\n    return this.http.get(BASIC_URL + \"/api/employee_management/delete/\" + id);\n  }\n}\n"],"mappings":";;AAIA,MAAMA,SAAS,GAAG,CAAC,uBAAuB,CAAC;AAK3C,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAACN,SAAS,GAAG,+BAA+B,EAAEK,QAAQ,CAAC;EAC9E;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAACR,SAAS,GAAG,oCAAoC,CAAC;EACxE;EAEAS,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAACR,SAAS,GAAG,yCAAyC,GAAGU,EAAE,CAAC;EAClF;EAEAC,cAAcA,CAACD,EAAU,EAAEL,QAAY;IACrC,OAAO,IAAI,CAACF,IAAI,CAACS,GAAG,CAACZ,SAAS,GAAG,kCAAkC,GAAGU,EAAE,EAAEL,QAAQ,CAAC;EACrF;EAEAQ,kBAAkBA,CAACH,EAAU;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAACR,SAAS,GAAG,kCAAkC,GAAGU,EAAE,CAAC;EAC3E;EAAC,QAAAI,CAAA,G;qBAtBUb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAflB,eAAe;IAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
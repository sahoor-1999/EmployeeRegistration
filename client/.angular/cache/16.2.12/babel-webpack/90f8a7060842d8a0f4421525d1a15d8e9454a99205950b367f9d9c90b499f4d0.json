{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let UpdateEmployeeComponent = class UpdateEmployeeComponent {\n  constructor(activatedRout, service, fb, router) {\n    this.activatedRout = activatedRout;\n    this.service = service;\n    this.fb = fb;\n    this.router = router;\n    this.title = 'formvalidation';\n    this.submitted = false;\n    this.id = this.activatedRout.snapshot.params[\"id\"];\n  }\n  ngOnInit() {\n    this.updateEmployeeForm = this.fb.group({\n      empNo: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      empName: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n      mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      email: ['', [Validators.required, Validators.email, Validators.maxLength(100)]]\n    });\n    this.getEmployeeById(this.id);\n  }\n  getEmployeeById(id) {\n    this.service.getEmployeeById(this.id).subscribe(res => {\n      console.log(res);\n      this.updateEmployeeForm.patchValue(res);\n    });\n  }\n  updateEmployee() {\n    this.service.updateEmployee(this.id, this.updateEmployeeForm.value).subscribe(res => {\n      console.log(res);\n      if (res.id != null) {}\n    });\n  }\n};\nUpdateEmployeeComponent = __decorate([Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})], UpdateEmployeeComponent);","map":{"version":3,"names":["Component","Validators","UpdateEmployeeComponent","constructor","activatedRout","service","fb","router","title","submitted","id","snapshot","params","ngOnInit","updateEmployeeForm","group","empNo","required","minLength","maxLength","empName","mobile","email","getEmployeeById","subscribe","res","console","log","patchValue","updateEmployee","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\IntelijIDEA Projfile\\employee_management\\src\\app\\components\\update-employee\\update-employee.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { EmployeeService } from 'src/app/service/employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent {\n\n  updateEmployeeForm!: FormGroup;\n  title = 'formvalidation';\n  submitted = false;\n\n  id:number = this.activatedRout.snapshot.params[\"id\"];\n\nconstructor(private activatedRout:ActivatedRoute,\n  private service:EmployeeService, \n  private fb:FormBuilder,\n  private router:Ro){}\n\n\n  ngOnInit(){\n\n    this.updateEmployeeForm = this.fb.group({\n      empNo:['',[Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      empName:['',[Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n      mobile:['',[Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      email:['',[Validators.required, Validators.email, Validators.maxLength(100)]]\n    })\n\n  this.getEmployeeById(this.id);\n  }\n\n  getEmployeeById(id:number){\n    this.service.getEmployeeById(this.id).subscribe((res) => {\n      console.log(res)\n      this.updateEmployeeForm.patchValue(res);\n    })\n  }\n\n  updateEmployee(){\n    this.service.updateEmployee(this.id, this.updateEmployeeForm.value).subscribe((res)=>{\n      console.log(res);\n      if(res.id != null){\n\n      }\n    })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAU5D,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAQpCC,YAAoBC,aAA4B,EACtCC,OAAuB,EACvBC,EAAc,EACdC,MAAS;IAHC,KAAAH,aAAa,GAAbA,aAAa;IACvB,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;IARd,KAAAC,KAAK,GAAG,gBAAgB;IACxB,KAAAC,SAAS,GAAG,KAAK;IAEjB,KAAAC,EAAE,GAAU,IAAI,CAACN,aAAa,CAACO,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;EAKjC;EAGnBC,QAAQA,CAAA;IAEN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC;MACtCC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACf,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,EAAEjB,UAAU,CAACkB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACnFC,OAAO,EAAC,CAAC,EAAE,EAAC,CAACnB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,EAAEjB,UAAU,CAACkB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACrFE,MAAM,EAAC,CAAC,EAAE,EAAC,CAACpB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,EAAE,CAAC,EAAEjB,UAAU,CAACkB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACrFG,KAAK,EAAC,CAAC,EAAE,EAAC,CAACrB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACqB,KAAK,EAAErB,UAAU,CAACkB,SAAS,CAAC,GAAG,CAAC,CAAC;KAC7E,CAAC;IAEJ,IAAI,CAACI,eAAe,CAAC,IAAI,CAACb,EAAE,CAAC;EAC7B;EAEAa,eAAeA,CAACb,EAAS;IACvB,IAAI,CAACL,OAAO,CAACkB,eAAe,CAAC,IAAI,CAACb,EAAE,CAAC,CAACc,SAAS,CAAEC,GAAG,IAAI;MACtDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACX,kBAAkB,CAACc,UAAU,CAACH,GAAG,CAAC;IACzC,CAAC,CAAC;EACJ;EAEAI,cAAcA,CAAA;IACZ,IAAI,CAACxB,OAAO,CAACwB,cAAc,CAAC,IAAI,CAACnB,EAAE,EAAE,IAAI,CAACI,kBAAkB,CAACgB,KAAK,CAAC,CAACN,SAAS,CAAEC,GAAG,IAAG;MACnFC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAGA,GAAG,CAACf,EAAE,IAAI,IAAI,EAAC,C;IAGpB,CAAC,CAAC;EACJ;CACD;AAzCYR,uBAAuB,GAAA6B,UAAA,EALnC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWhC,uBAAuB,CAyCnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}